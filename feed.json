{
  "version": "https://jsonfeed.org/version/1.1",
  "title": "CookBook",
  "home_page_url": "https://cookbook.alili.fun/",
  "feed_url": "https://cookbook.alili.fun/feed.json",
  "description": "CookBook ✨",
  "items": [
    {
      "title": "家常菜列表",
      "url": "https://cookbook.alili.fun/simple/",
      "id": "https://cookbook.alili.fun/simple/",
      "summary": "简单家常菜",
      "content_html": "",
      "date_published": "2022-05-12T00:00:00.000Z",
      "date_modified": "2022-05-14T14:34:02.000Z",
      "authors": [
        {
          "name": "wangjia"
        }
      ],
      "tags": [
        "家常菜"
      ]
    },
    {
      "title": "关于我",
      "url": "https://cookbook.alili.fun/about/",
      "id": "https://cookbook.alili.fun/about/",
      "summary": "关于我",
      "content_html": "",
      "date_published": "2022-05-12T05:43:43.000Z",
      "date_modified": "2022-05-12T07:24:54.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "Flowchart",
      "url": "https://cookbook.alili.fun/simple/getting-started.html",
      "id": "https://cookbook.alili.fun/simple/getting-started.html",
      "summary": "Let the Markdown file support flow chart in your VuePress site\n",
      "content_html": "<p>Let the Markdown file support flow chart in your VuePress site</p>\n\n<p>This plugin is using <a href=\"https://github.com/adrai/flowchart.js\" target=\"_blank\" rel=\"noopener noreferrer\">flowchart.js</a> to support this feature.</p>\n<h2 id=\"config\" tabindex=\"-1\"> Config</h2>\n<CodeGroup>\n<CodeGroupItem title=\"TS\">\n<div><pre><code><span>// .vuepress/config.ts</span>\n<span>import</span> <span>{</span> mdEnhance <span>}</span> <span>from</span> <span>\"vuepress-plugin-md-enhance\"</span><span>;</span>\n\n<span>export</span> <span>default</span> <span>{</span>\n  plugins<span>:</span> <span>[</span>\n    <span>mdEnhance</span><span>(</span><span>{</span>\n      <span>// Enable flowchart</span>\n      flowchart<span>:</span> <span>true</span><span>,</span>\n    <span>}</span><span>)</span><span>,</span>\n  <span>]</span><span>,</span>\n<span>}</span><span>;</span>\n</code></pre><div><br><br><br><br><br><br><br><div>&nbsp;</div><br><br><br></div><div aria-hidden=\"true\"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div></CodeGroupItem>\n<CodeGroupItem title=\"JS\">\n<div><pre><code><span>// .vuepress/config.js</span>\n<span>const</span> <span>{</span> mdEnhance <span>}</span> <span>=</span> <span>require</span><span>(</span><span>\"vuepress-plugin-md-enhance\"</span><span>)</span><span>;</span>\n\nmodule<span>.</span>exports <span>=</span> <span>{</span>\n  <span>plugins</span><span>:</span> <span>[</span>\n    <span>mdEnhance</span><span>(</span><span>{</span>\n      <span>// Enable flowchart</span>\n      <span>flowchart</span><span>:</span> <span>true</span><span>,</span>\n    <span>}</span><span>)</span><span>,</span>\n  <span>]</span><span>,</span>\n<span>}</span><span>;</span>\n</code></pre><div><br><br><br><br><br><br><br><div>&nbsp;</div><br><br><br></div><div aria-hidden=\"true\"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div></CodeGroupItem>\n</CodeGroup>\n<h2 id=\"syntax\" tabindex=\"-1\"> Syntax</h2>\n<div><pre><code><span>&lt;!-- ↓ :preset is optional --></span>\n\n<span><span>```</span><span>flow:preset</span>\n<span>\n&lt;!-- Your flowchart code here. -->\n</span>\n<span>```</span></span>\n</code></pre><div aria-hidden=\"true\"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><p>Available presets for now:</p>\n<ul>\n<li><code>vue</code> (default)</li>\n<li><code>ant</code></li>\n<li><code>pie</code></li>\n</ul>\n<h2 id=\"demo\" tabindex=\"-1\"> Demo</h2>\n<FlowChart id=\"flowchart-382ee1a7\" code=\"st%3D%3Estart%3A%20Start%7Cpast%3A%3Ehttp%3A%2F%2Fwww.google.com%5Bblank%5D%0Ae%3D%3Eend%3A%20End%7Cfuture%3A%3Ehttp%3A%2F%2Fwww.google.com%0Aop1%3D%3Eoperation%3A%20My%20Operation%7Cpast%0Aop2%3D%3Eoperation%3A%20Stuff%7Ccurrent%0Asub1%3D%3Esubroutine%3A%20My%20Subroutine%7Cinvalid%0Acond%3D%3Econdition%3A%20Yes%0Aor%20No%3F%7Capproved%3A%3Ehttp%3A%2F%2Fwww.google.com%0Ac2%3D%3Econdition%3A%20Good%20idea%7Crejected%0Aio%3D%3Einputoutput%3A%20catch%20something...%7Cfuture%0A%0Ast-%3Eop1(right)-%3Econd%0Acond(yes%2C%20right)-%3Ec2%0Acond(no)-%3Esub1(left)-%3Eop1%0Ac2(yes)-%3Eio-%3Ee%0Ac2(no)-%3Eop2-%3Ee%0A\" preset=\"vue\"></FlowChart><FlowChart id=\"flowchart-382ee1a8\" code=\"st%3D%3Estart%3A%20Start%7Cpast%3A%3Ehttp%3A%2F%2Fwww.google.com%5Bblank%5D%0Ae%3D%3Eend%3A%20End%7Cfuture%3A%3Ehttp%3A%2F%2Fwww.google.com%0Aop1%3D%3Eoperation%3A%20My%20Operation%7Cpast%0Aop2%3D%3Eoperation%3A%20Stuff%7Ccurrent%0Asub1%3D%3Esubroutine%3A%20My%20Subroutine%7Cinvalid%0Acond%3D%3Econdition%3A%20Yes%0Aor%20No%3F%7Capproved%3A%3Ehttp%3A%2F%2Fwww.google.com%0Ac2%3D%3Econdition%3A%20Good%20idea%7Crejected%0Aio%3D%3Einputoutput%3A%20catch%20something...%7Cfuture%0A%0Ast-%3Eop1(right)-%3Econd%0Acond(yes%2C%20right)-%3Ec2%0Acond(no)-%3Esub1(left)-%3Eop1%0Ac2(yes)-%3Eio-%3Ee%0Ac2(no)-%3Eop2-%3Ee%0A\" preset=\"ant\"></FlowChart><FlowChart id=\"flowchart-382ee1a9\" code=\"st%3D%3Estart%3A%20Start%7Cpast%3A%3Ehttp%3A%2F%2Fwww.google.com%5Bblank%5D%0Ae%3D%3Eend%3A%20End%7Cfuture%3A%3Ehttp%3A%2F%2Fwww.google.com%0Aop1%3D%3Eoperation%3A%20My%20Operation%7Cpast%0Aop2%3D%3Eoperation%3A%20Stuff%7Ccurrent%0Asub1%3D%3Esubroutine%3A%20My%20Subroutine%7Cinvalid%0Acond%3D%3Econdition%3A%20Yes%0Aor%20No%3F%7Capproved%3A%3Ehttp%3A%2F%2Fwww.google.com%0Ac2%3D%3Econdition%3A%20Good%20idea%7Crejected%0Aio%3D%3Einputoutput%3A%20catch%20something...%7Cfuture%0A%0Ast-%3Eop1(right)-%3Econd%0Acond(yes%2C%20right)-%3Ec2%0Acond(no)-%3Esub1(left)-%3Eop1%0Ac2(yes)-%3Eio-%3Ee%0Ac2(no)-%3Eop2-%3Ee%0A\" preset=\"pie\"></FlowChart><div><pre><code><span><span>```</span><span>flow</span>\n<span>st=>start: Start|past:>http://www.google.com[blank]\ne=>end: End|future:>http://www.google.com\nop1=>operation: My Operation|past\nop2=>operation: Stuff|current\nsub1=>subroutine: My Subroutine|invalid\ncond=>condition: Yes\nor No?|approved:>http://www.google.com\nc2=>condition: Good idea|rejected\nio=>inputoutput: catch something...|future\n\nst->op1(right)->cond\ncond(yes, right)->c2\ncond(no)->sub1(left)->op1\nc2(yes)->io->e\nc2(no)->op2->e</span>\n<span>```</span></span>\n</code></pre><div aria-hidden=\"true\"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br></div></div><h2 id=\"flowchart-intro\" tabindex=\"-1\"> Flowchart Intro</h2>\n<h3 id=\"node-types\" tabindex=\"-1\"> Node Types</h3>\n<p>Defines the shape that the node will take.</p>\n<h3 id=\"start-end\" tabindex=\"-1\"> Start &amp; End</h3>\n<p>Used as the first node where flows start from.\nDefault text is <code>Start</code>.</p>\n<ul>\n<li><code>[Variable]-&gt;start: [Text]</code></li>\n</ul>\n<p>Used as the last node where a flow ends.\nDefault text is <code>End</code>.</p>\n<ul>\n<li><code>[Variable]-&gt;end: [Text]</code></li>\n</ul>\n<div><pre><code><span><span>```</span><span>flow</span>\n<span>st=>start: Start\ne=>end: End\n\nst->e</span>\n<span>```</span></span>\n</code></pre><div aria-hidden=\"true\"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><FlowChart id=\"flowchart-382ee220\" code=\"st%3D%3Estart%3A%20Start%0Ae%3D%3Eend%3A%20End%0A%0Ast-%3Ee%0A\" preset=\"vue\"></FlowChart><h3 id=\"operation\" tabindex=\"-1\"> Operation</h3>\n<p>Indicates that an operation needs to happen in the flow.</p>\n<ul>\n<li><code>[Variable]-&gt;operation: [Text]</code></li>\n</ul>\n<div><pre><code><span><span>```</span><span>flow</span>\n<span>process=>operation: Operation\ne=>end: End\n\nprocess->e</span>\n<span>```</span></span>\n</code></pre><div aria-hidden=\"true\"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><FlowChart id=\"flowchart-382ee244\" code=\"process%3D%3Eoperation%3A%20Operation%0Ae%3D%3Eend%3A%20End%0A%0Aprocess-%3Ee%0A\" preset=\"vue\"></FlowChart><h3 id=\"input-output\" tabindex=\"-1\"> Input / Output</h3>\n<p>Indicates that IO happens in a flow.</p>\n<ul>\n<li><code>[Variable]-&gt;inputoutput: [Text]</code></li>\n</ul>\n<div><pre><code><span><span>```</span><span>flow</span>\n<span>process=>inputoutput: Inputoutput\ne=>end: End\n\nprocess->e</span>\n<span>```</span></span>\n</code></pre><div aria-hidden=\"true\"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><FlowChart id=\"flowchart-64a570a8\" code=\"process%3D%3Einputoutput%3A%20Inputoutput%0Ae%3D%3Eend%3A%20End%0A%0Aprocess-%3Ee%0A\" preset=\"vue\"></FlowChart><h3 id=\"subroutine\" tabindex=\"-1\"> Subroutine</h3>\n<p>Indicates that a subroutine happens in the flow and that there should be another flowchart that documents this subroutine.</p>\n<ul>\n<li><code>[Variable]-&gt;subroutine: [Text]</code></li>\n</ul>\n<div><pre><code><span><span>```</span><span>flow</span>\n<span>process=>subroutine: Subroutine\ne=>end: End\n\nprocess->e</span>\n<span>```</span></span>\n</code></pre><div aria-hidden=\"true\"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><FlowChart id=\"flowchart-64a57060\" code=\"process%3D%3Esubroutine%3A%20Subroutine%0Ae%3D%3Eend%3A%20End%0A%0Aprocess-%3Ee%0A\" preset=\"vue\"></FlowChart><h3 id=\"condition\" tabindex=\"-1\"> Condition</h3>\n<p>Allows for a conditional or logical statement to direct the flow into one of two or more paths.</p>\n<ul>\n<li>\n<p><code>[Variable]-&gt;condition: [Text]</code></p>\n</li>\n<li>\n<p><code>[Variable]([yesText])-&gt;[Position]</code></p>\n</li>\n<li>\n<p><code>[Variable]([noText])-&gt;[Position]</code></p>\n</li>\n</ul>\n<div><pre><code><span><span>```</span><span>flow</span>\n<span>cond=>condition: Process?\nprocess=>operation: Process\ne=>end: End\n\ncond(yes)->process->e\ncond(no)->e</span>\n<span>```</span></span>\n</code></pre><div aria-hidden=\"true\"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><FlowChart id=\"flowchart-64a56fb0\" code=\"cond%3D%3Econdition%3A%20Process%3F%0Aprocess%3D%3Eoperation%3A%20Process%0Ae%3D%3Eend%3A%20End%0A%0Acond(yes)-%3Eprocess-%3Ee%0Acond(no)-%3Ee%0A\" preset=\"vue\"></FlowChart><h3 id=\"parallel\" tabindex=\"-1\"> Parallel</h3>\n<p>Allows for multiple flows to happen simultaneously.</p>\n<ul>\n<li><code>[Variable]-&gt;parallel: [Text]</code></li>\n<li><code>[Variable](path1, direction)-&gt;[Position]</code></li>\n<li><code>[Variable](path1, direction)-&gt;[Position]</code></li>\n</ul>\n<div><pre><code><span><span>```</span><span>flow</span>\n<span>para=>parallel: parallel tasks\nprocess=>operation: Process\ne=>end: End\n\npara(path1, bottom)->process->e\npara(path2)->e</span>\n<span>```</span></span>\n</code></pre><div aria-hidden=\"true\"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><FlowChart id=\"flowchart-64a56f2a\" code=\"para%3D%3Eparallel%3A%20parallel%20tasks%0Aprocess%3D%3Eoperation%3A%20Process%0Ae%3D%3Eend%3A%20End%0A%0Apara(path1%2C%20bottom)-%3Eprocess-%3Ee%0Apara(path2)-%3Ee%0A\" preset=\"vue\"></FlowChart><h2 id=\"connections\" tabindex=\"-1\"> Connections</h2>\n<p>Connections are defined in their own section below the node definitions.</p>\n<p>The <code>-&gt;</code> operator specifies a connection from one node to another like <code>nodeVar1-&gt;nodeVar2-&gt;nodeVar3</code>.</p>\n<p>Not all nodes need to be specified in one string and can be separaged like so</p>\n<div><pre><code>nodeVar1->nodeVar2\nnodeVar2->nodeVar3\n</code></pre><div aria-hidden=\"true\"><span>1</span><br><span>2</span><br></div></div><p>Connection syntax is as follows:</p>\n<p><code>&lt;node variable name&gt;[(&lt;specificaion1&gt;[, &lt;specification2])]-&gt;&lt;node variable name&gt;[[(&lt;specificaion1&gt;[, &lt;specification2])]-&gt;&lt;node variable name&gt;]</code></p>\n<p>Items in <code>[]</code> are optional.</p>\n<h3 id=\"directions\" tabindex=\"-1\"> Directions</h3>\n<p>The following directions are available and define the direction the connection will leave the node from. If there are more than one specifiers, it is always the last. All nodes have a default direction making this an optional specification. <code>&lt;direction&gt;</code> will be used and one of the below list should be used in its place.</p>\n<ul>\n<li><code>left</code></li>\n<li><code>right</code></li>\n<li><code>top</code></li>\n<li><code>bottom</code></li>\n</ul>\n<h3 id=\"node-specific-specifiers-by-type\" tabindex=\"-1\"> Node Specific Specifiers by Type</h3>\n<p>Each node variables has optional specifiers, like direction, and some have special specifiers depending on the node type that are defined below. Specifiers are added after the variable name in <code>()</code> and separated with <code>,</code> like <code>nodeVar(spec1, spec2)</code>.</p>\n<ul>\n<li>\n<p><strong>start</strong>\n<strong>operation</strong>\n<strong>inputoutput</strong>\n<strong>subroutine</strong></p>\n<p>Optional direction</p>\n<p><code>startVar(&lt;direction&gt;)-&gt;nextNode</code></p>\n<p><code>operationVar(&lt;direction&gt;)-&gt;nextNode</code></p>\n<p><code>inputoutputVar(&lt;direction&gt;)-&gt;nextNode</code></p>\n<p><code>subroutineVar(&lt;direction&gt;)-&gt;nextNode</code></p>\n</li>\n<li>\n<p><strong>condition</strong></p>\n<p>Required logical specification of <code>yes</code> or <code>no</code></p>\n<p>Optional direction</p>\n<div><pre><code>conditionalVar(yes, <span><span><span>&lt;</span>direction</span><span>></span></span>)->nextNode1\nconditionalVar(no, <span><span><span>&lt;</span>direction</span><span>></span></span>)->nextNode2\n</code></pre><div aria-hidden=\"true\"><span>1</span><br><span>2</span><br></div></div></li>\n<li>\n<p><strong>parallel</strong></p>\n<p>Required path specification of <code>path1</code>, <code>path2</code>, or <code>path3</code></p>\n<p>Optional direction</p>\n<div><pre><code>parallelVar(path1, <span><span><span>&lt;</span>direction</span><span>></span></span>)->nextNode1\nparallelVar(path2, <span><span><span>&lt;</span>direction</span><span>></span></span>)->nextNode2\nparallelVar(path3, <span><span><span>&lt;</span>direction</span><span>></span></span>)->nextNode3\n</code></pre><div aria-hidden=\"true\"><span>1</span><br><span>2</span><br><span>3</span><br></div></div></li>\n</ul>\n<h3 id=\"links\" tabindex=\"-1\"> Links</h3>\n<p>A external link can be added to a node with the <code>:&gt;</code> operator.</p>\n<p>The <code>st</code> node is linked with <code>http://www.google.com</code> and will open a new tab because <code>[blank]</code> is at the end of the URL.</p>\n<p>The <code>e</code> node is linked with <code>http://www.yahoo.com</code> and will cause the page to navigate to that page instead of opening a new tab.</p>\n<div><pre><code>st=>start: Start:>http://www.google.com[blank]\ne=>end: End:>http://www.yahoo.com\n</code></pre><div aria-hidden=\"true\"><span>1</span><br><span>2</span><br></div></div><h2 id=\"advice\" tabindex=\"-1\"> Advice</h2>\n<p>Symbols that should possibly not be used in the text: <code>=&gt;</code> and <code>-&gt;</code> and <code>:&gt;</code> and <code>|</code> and <code>@&gt;</code> and <code>:$</code></p>\n<p>To emphasize a specific path in your flowchart, you can define it like this:</p>\n<div><pre><code>st@>op1({\"stroke\":\"Red\"})@>cond({\"stroke\":\"Red\",\"stroke-width\":6,\"arrow-end\":\"classic-wide-long\"})@>c2({\"stroke\":\"Red\"})@>op2({\"stroke\":\"Red\"})@>e({\"stroke\":\"Red\"})\n</code></pre><div aria-hidden=\"true\"><span>1</span><br></div></div>",
      "date_published": "2022-05-12T05:43:43.000Z",
      "date_modified": "2022-05-13T03:43:38.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "西红柿炒鸡蛋",
      "url": "https://cookbook.alili.fun/simple/scrambled-egg-with-tomato.html",
      "id": "https://cookbook.alili.fun/simple/scrambled-egg-with-tomato.html",
      "summary": "西红柿炒鸡蛋",
      "content_html": "<h2 id=\"洗菜\" tabindex=\"-1\"> 洗菜</h2>\n<h2 id=\"打蛋\" tabindex=\"-1\"> 打蛋</h2>\n<h2 id=\"炒\" tabindex=\"-1\"> 炒</h2>\n<h2 id=\"放盐\" tabindex=\"-1\"> 放盐</h2>\n<h2 id=\"出锅\" tabindex=\"-1\"> 出锅</h2>\n<p>🎉</p>\n",
      "date_published": "2022-05-12T05:43:43.000Z",
      "date_modified": "2022-05-12T07:33:05.000Z",
      "authors": [],
      "tags": []
    }
  ]
}